@model ProductListViewModel;

@{
  Layout = "_Layout";
  ViewData["page_title"] = "Lista de Produtos";
}

@section Styles {
  <link rel="stylesheet" href="~/css/list-products.css">
  <link rel="stylesheet" href="~/css/table-styles.css">
  <link rel="stylesheet" href="~/css/modal-block-product.css">
}

@section Scripts {
  <script src="~/js/list-products.js"></script>
}

<div class="main-bottom-content">
  <div class="controls">
    <input type="text" placeholder="Pesquisar Produto">
    <select class="view-mode-select-input js-view-mode-select-input">
      <option selected value="1">Visualiza√ß√£o em Tabela</option>
      <option value="2">Visualiza√ß√£o em Cards</option>
    </select>

    <a class="btn green js-add-new-product-button" asp-controller="Home" asp-action="RegisterProduct">
      <i class="fas fa-plus"></i> Adicionar Produto
    </a>
    
    <a class="trash-icon-button" asp-controller="Home" asp-action="ListBlockedProducts">
      <span>Lixeira</span>
      <i class="fa-sharp fa-solid fa-trash trash-icon"></i>
    </a>
  </div>

  <div class="cards js-card-view display-none">
    @if (Model.Products != null && Model.Products.Any())
    {
      foreach (var product in Model.Products)
      {
        var productInformation = Model.ProductInformationList.FirstOrDefault(pi => pi.ProductId == product.Id);

        if (productInformation != null)
        {
          <div class="card">
            <h2><i class="fa-solid fa-wine-bottle"></i> <strong>@product.ProductCategory @product.ProductName</strong> - [ @product.ProductSize ]</h2>
            <p><i class="fas fa-tag"></i> Categoria: <span class="value-container">@product.ProductCategory</span> </p>
            <p><i class="fas fa-box"></i> Quantidade Dispon√≠vel: <span class="value-container">@productInformation.AmountBoxes CAIXAS</span></p>
            <p><i class="fas fa-coins"></i> Pre√ßo Unit.: <span class="value-container">@productInformation.UnitPrice MT</span></p>
            <p><i class="fas fa-coins"></i> Pre√ßo de Compra: <span class="value-container">@productInformation.PurchasePrice MT</span></p>
            <p><i class="fas fa-user"></i> Fornecedor: <span class="value-container">@productInformation.ProductSupplier</span></p>
          </div>
        }
      }
    }
    else
    {
      <p style="text-align: center; color: red; border: 1px solid red; padding: 1em;" class="no-products-message">Nenhum produto encontrado!</p>
    }
  </div>

  <div class="product-list-table-view js-table-view">
    <table class="user-table">
      <thead>
        <tr>
          <th>#</th>
          <th>Nome do Produto</th>
          <th>Tamanho</th>
          <th>Quantidade Dispon√≠vel</th>
          <th>Pre√ßo Unit√°rio</th>
          <th>Fornecedor</th>
          <th>Data de Registo</th>
          <th class="action-buttons">A√ß√µes</th>
        </tr>
      </thead>
      <tbody>
        @if (Model.Products != null && Model.Products.Any())
        {
          foreach (var product in Model.Products)
          {
            var productInformation = Model.ProductInformationList.FirstOrDefault(pi => pi.ProductId == product.Id);

            if (productInformation != null)
            {
              <tr>
                <td class="tr-id-column">@product.Id</td>
                <td class="tr-name">@product.ProductName</td>
                <td>@product.ProductSize</td>
                <td>@productInformation.AmountBoxes</td>
                <td>@productInformation.UnitPrice</td>
                <td>@productInformation.ProductSupplier</td>
                <td>@productInformation.RegisterDate.ToString("dd-MM-yyyy")</td>
                <td class="action-buttons">
                  <button class="btn red js-block-product-button" title="Remover Produto"
                      data-product-name="@product.ProductCategory @product.ProductName de @product.ProductSize?.ToUpper()"
                      data-product-id="@product.Id"
                  >
                    <i class="fas fa-trash-alt"></i> 
                  </button>
                  <button class="btn edit-btn" asp-controller="Home" asp-action="EditProduct" asp-route-id="@product.Id" title="Editar Produto">
                    <i class="fas fa-pencil-alt"></i>
                  </button>
                </td>
              </tr>
            }
          }
        }
      </tbody>
    </table>
  </div>
</div>

<!-- Modal de Bloqueamento -->
<div class="modal-overlay js-block-product-modal" id="modalOverlay">
  <form class="modal" asp-action="BlockProduct" asp-controller="Product" method="post">
    <input type="hidden" name="id" class="js-block-product-id" />

    <div class="modal-icon block">
      <span>üö´</span>
    </div>
    <h2 class="modal-title">Bloquear Produto</h2>
    <p class="modal-message">O produto ficar√° indispon√≠vel para venda at√© ser desbloqueado.</p>
    <div style="color: red !important; border: 1px solid red; padding: 1em;" class="modal-product">
      <strong id="modalProduct" class="js-block-product-name">Nome do Produto</strong>
    </div>
    <div class="modal-actions">
      <button type="button" class="btn btn-cancel js-close-block-product-modal">Cancelar</button>
      <button type="submit" class="btn btn-confirm block js-confirm-block-button">Bloquear</button>
    </div>
  </form>
</div>

